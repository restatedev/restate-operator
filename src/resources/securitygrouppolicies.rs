// WARNING: generated by kopium - manual changes will be overwritten
// kopium command: kopium securitygrouppolicies.vpcresources.k8s.aws -A
// kopium version: 0.16.5

use k8s_openapi::apimachinery::pkg::apis::meta::v1::LabelSelector;
use kube::CustomResource;
use schemars::JsonSchema;
use serde::{Deserialize, Serialize};

/// SecurityGroupPolicySpec defines the desired state of SecurityGroupPolicy
#[derive(CustomResource, Serialize, Deserialize, Clone, Debug, JsonSchema)]
#[kube(
    group = "vpcresources.k8s.aws",
    version = "v1beta1",
    kind = "SecurityGroupPolicy",
    plural = "securitygrouppolicies"
)]
#[kube(namespaced)]
pub struct SecurityGroupPolicySpec {
    /// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
    #[serde(
        default,
        skip_serializing_if = "Option::is_none",
        rename = "podSelector"
    )]
    pub pod_selector: Option<LabelSelector>,
    /// GroupIds contains the list of security groups that will be applied to the network interface of the pod matching the criteria.
    #[serde(
        default,
        skip_serializing_if = "Option::is_none",
        rename = "securityGroups"
    )]
    pub security_groups: Option<SecurityGroupPolicySecurityGroups>,
    /// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
    #[serde(
        default,
        skip_serializing_if = "Option::is_none",
        rename = "serviceAccountSelector"
    )]
    pub service_account_selector: Option<LabelSelector>,
}

/// GroupIds contains the list of security groups that will be applied to the network interface of the pod matching the criteria.
#[derive(Serialize, Deserialize, Clone, Debug, JsonSchema)]
pub struct SecurityGroupPolicySecurityGroups {
    /// Groups is the list of EC2 Security Groups Ids that need to be applied to the ENI of a Pod.
    #[serde(default, skip_serializing_if = "Option::is_none", rename = "groupIds")]
    pub group_ids: Option<Vec<String>>,
}
