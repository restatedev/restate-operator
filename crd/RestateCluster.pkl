/// RestateCluster describes the configuration and status of a Restate cluster.
///
/// This module was generated from the CustomResourceDefinition at <file:./crd/crd.yaml>.
module dev.restate.v1.RestateCluster

extends "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.0.1#/K8sResource.pkl"

import "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.0.1#/apimachinery/pkg/apis/meta/v1/ObjectMeta.pkl"
import "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.0.1#/api/core/v1/PodSpec.pkl"
import "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.0.1#/api/core/v1/EnvVar.pkl"
import "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.0.1#/api/core/v1/ResourceRequirements.pkl"
import "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.0.1#/api/core/v1/Toleration.pkl"
import "package://pkg.pkl-lang.org/pkl-k8s/k8s@1.0.1#/api/networking/v1/NetworkPolicy.pkl"

fixed apiVersion: "restate.dev/v1"

fixed kind: "RestateCluster"

/// Standard object's metadata.
///
/// More info: <https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata>.
metadata: ObjectMeta?

/// Represents the configuration of a Restate Cluster
spec: Spec

/// Status of the RestateCluster. This is set and managed automatically. Read-only. More info:
/// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
status: Status?

/// Represents the configuration of a Restate Cluster
class Spec {
  /// clusterName sets the RESTATE_CLUSTER_NAME environment variable. Defaults to the object name.
  clusterName: String?

  /// Compute configuration
  compute: Compute

  /// TOML-encoded Restate config file
  config: String?

  /// Security configuration
  security: Security?

  /// Storage configuration
  storage: Storage
}

/// Compute configuration
class Compute {
  /// Affinity is a group of affinity scheduling rules.
  affinity: PodSpec.Affinity?

  /// Specifies the DNS parameters of the Restate pod. Parameters specified here will be merged to the
  /// generated DNS configuration based on DNSPolicy.
  dnsConfig: PodSpec.PodDNSConfig?

  /// Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet',
  /// 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the
  /// policy selected with DNSPolicy.
  dnsPolicy: String?

  /// List of environment variables to set in the container; these may override defaults
  env: Listing<EnvVar>?

  /// Container image name. More info: https://kubernetes.io/docs/concepts/containers/images.
  image: String

  /// Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is
  /// specified, or IfNotPresent otherwise. More info:
  /// https://kubernetes.io/docs/concepts/containers/images#updating-images
  imagePullPolicy: String?

  /// If specified, a node selector for the pod
  nodeSelector: Mapping<String, String>?

  /// replicas is the desired number of Restate nodes. If unspecified, defaults to 1.
  replicas: Int?

  /// Compute Resources for the Restate container. More info:
  /// https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources: ResourceRequirements?

  /// If specified, the pod's tolerations.
  tolerations: Listing<Toleration>?
}

/// Security configuration
class Security {
  /// If set, create an AWS PodIdentityAssociation using the ACK CRD in order to give the Restate pod
  /// access to this role and allow the cluster to reach the Pod Identity agent.
  awsPodIdentityAssociationRoleArn: String?

  /// If set, create an AWS SecurityGroupPolicy CRD object to place the Restate pod into these security
  /// groups
  awsPodSecurityGroups: Listing<String>?

  /// Egress rules to allow the cluster to make outbound requests; this is in addition to the default of
  /// allowing public internet access and cluster DNS access. Providing a single empty rule will allow
  /// all outbound traffic - not recommended
  networkEgressRules: Listing<NetworkPolicy.NetworkPolicyEgressRule>?

  /// Network peers to allow inbound access to restate ports If unset, will not allow any new traffic.
  /// Set any of these to [] to allow all traffic - not recommended.
  networkPeers: NetworkPeers?

  /// If set, configure the use of a private key to sign outbound requests from this cluster
  requestSigningPrivateKey: RequestSigningPrivateKey?

  /// Annotations to set on the ServiceAccount created for Restate
  serviceAccountAnnotations: Mapping<String, String>?

  /// Annotations to set on the Service created for Restate
  serviceAnnotations: Mapping<String, String>?
}

/// Network peers to allow inbound access to restate ports If unset, will not allow any new traffic. Set
/// any of these to [] to allow all traffic - not recommended.
class NetworkPeers {
  admin: Listing<NetworkPolicy.NetworkPolicyPeer>?

  ingress: Listing<NetworkPolicy.NetworkPolicyPeer>?

  metrics: Listing<NetworkPolicy.NetworkPolicyPeer>?
}

/// If set, configure the use of a private key to sign outbound requests from this cluster
class RequestSigningPrivateKey {
  /// A Kubernetes Secret source for the private key
  secret: Secret?

  /// A CSI secret provider source for the private key; will create a SecretProviderClass.
  secretProvider: SecretProvider?

  /// The version of Restate request signing that the key is for; currently only "v1" accepted.
  version: String
}

/// A Kubernetes Secret source for the private key
class Secret {
  /// The key of the secret to select from. Must be a valid secret key.
  key: String

  /// Name of the secret.
  secretName: String
}

/// A CSI secret provider source for the private key; will create a SecretProviderClass.
class SecretProvider {
  /// Configuration for specific provider
  parameters: Mapping<String, String>?

  /// The path of the private key relative to the root of the mounted volume
  path: String

  /// Configuration for provider name
  provider: String?
}

/// Storage configuration
class Storage {
  /// storageClassName is the name of the StorageClass required by the claim. More info:
  /// https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1 this field is immutable
  storageClassName: String?

  /// storageRequestBytes is the amount of storage to request in volume claims. It is allowed to increase
  /// but not decrease.
  storageRequestBytes: Int(this >= 1.0)
}

/// Status of the RestateCluster. This is set and managed automatically. Read-only. More info:
/// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
class Status {
  conditions: Listing<Condition>?
}

class Condition {
  /// Last time the condition transitioned from one status to another.
  lastTransitionTime: String?

  /// Human-readable message indicating details about last transition.
  message: String?

  /// Unique, one-word, CamelCase reason for the condition's last transition.
  reason: String?

  /// Status is the status of the condition. Can be True, False, Unknown.
  status: String

  /// Type of the condition, known values are (`Ready`).
  type: String
}
